{
  "name": "level-hooks",
  "description": "pre/post hooks for leveldb",
  "version": "4.1.9",
  "homepage": "https://github.com/dominictarr/level-hooks",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/level-hooks.git"
  },
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "http://bit.ly/dominictarr"
  },
  "dependencies": {
    "string-range": "~1.2",
    "lock": "0.0.3"
  },
  "devDependencies": {
    "levelup": "~0.8",
    "rimraf": "~2.0.2",
    "macgyver": "~1.9",
    "range-bucket": "0.0.0"
  },
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "readme": "# Pre/Post hooks for leveldb\n\nIntercept put/delete/batch operations on levelup.\n\n## Warning - Breaking Changes\n \nThe API for implementing pre hooks has changed.\nInstead of mutating an array at once, the prehook\nis called on each change `hook(change, add)`\nand may call `add(_change)` to add a new item into the batch.\n\nAlso, attaching hooks to leveldb is now simpler\n``` js\nvar Hooks = require('level-hooks')\nHooks(db) //previously: Hooks()(db)\n```\n\n## Example\n\n``` js\nvar levelup   = require('levelup')\nvar timestamp = require('monotonic-timestamp')\nvar hooks     = require('level-hooks')\n\nvar db = levelup(file)\n\n//install hooks onto db.\nhooks(db)\n\ndb.hooks.pre({start: '', end: '~'}, function (change, add) {\n  //change is same pattern as the an element in the batch array.\n  //add a log to record every put operation.\n  add({type: 'put', key: '~log-'+timestamp()+'-'+change.type, value: change.key})\n})\n\n//add a hook that responds after an operation has completed.\ndb.hooks.post(function (ch) {\n  //{type: 'put'|'del', key: ..., value: ...}\n})\n```\n\nUsed by [map-reduce](https://github.com/dominictarr/map-reduce) \nto make map-reduce durable across crashes!\n\n## Async Example\n\n``` js\nvar levelup   = require('levelup')\nvar timestamp = require('monotonic-timestamp')\nvar hooks     = require('level-hooks')\n\nvar db = levelup(file)\n\n//install hooks onto db.\nhooks(db)\n\ndb.hooks.pre('counter!', function (op, done) {\n  db.get(op.key, function (err, val) {\n    op.value = Number(op.value || 0) + Number(val || 0)\n    cb()\n  })\n})\n\ndb.put('counter!foo', 1, function (err) {\n  db.put('counter!foo', 2, function (err) {\n    db.get('counter!foo', console.log) //3!\n  })\n})\n\n```\n\n## API\n\n### rm = db.hooks.pre (range?, hook(change, add(change, prefix?)))\n\nIf `prefix` is a `string` or `object` that defines the range the pre-hook triggers on.\nIf `prefix' is a string, then the hook only triggers on keys that _start_ with that \nstring. If the hook is an object it must be of form `{start: START, end: END}`\n\n`hook` is a function, and will be called on each item in the batch \n(if it was a `put` or `del`, it will be called on the change)\n`change` is always of the form `{key: key, value: value, type:'put' | 'del'}`\n\nPass additional changes to `add` to add them to the batch.\nIf add is passed a string as the second argument it will prepend that prefix\nto any keys you add.\n\nTo veto (remove) the current change call `add(false)`.\n\n`db.hooks.pre` returns a function that will remove the hook when called.\n\n### rm = db.hooks.post (range?, hook)\n\nPost hooks do not offer any chance to change the value.\nbut do take a range option, just like `pre`\n\n`db.hooks.post` returns a function that will remove the hook when called.\n\n### rm = db.hooks.async(range?, hook)\n\nAsync hooks are another kind of prehook that allow IO to happen\nbefore the batch/put/del is processed.\n\nAlso, async hooked keys are processed strictly in series,\nsubsequent calls being queued until the previous call has returned.\n\nThis may be an issue for write heavy applications!\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "level-hooks@4.1.9",
  "dist": {
    "shasum": "169472f7ac69360b6b27d1e6a47c0a6d65043590"
  },
  "_resolved": "git://github.com/dominictarr/level-hooks.git#a2bfcac1cbcca97dd2a64623b05b686cee913d8f",
  "_from": "level-hooks@git://github.com/dominictarr/level-hooks.git#async2"
}
